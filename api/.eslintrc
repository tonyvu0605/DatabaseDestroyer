{
  "root": true,
  "env": {
    "node": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:node/recommended",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "eslint-plugin-security-node",
    "eslint-plugin-security",
    "eslint-plugin-import",
    "eslint-plugin-node",
    "prettier"
  ],
  "settings": {
    "node": {
      "tryExtensions": [".js", ".json", ".node", ".ts"]
    },
    "import/resolver": {
      "alias": {
        "map": [
          ["@models",
            "./src/models"
          ],
          ["@services",
            "./src/services"
          ],
          [
            "@controllers",
            "./src/controllers"
          ],
          [
            "@routes",
            "./src/routes"
          ],
          [
            "@utils",
            "./src/utils"
          ],
          [
            "@middlewares",
            "./src/middlewares"
          ],
          [
            "@configs",
            "./src/configs"
          ],
          [
            "@constants",
            "./src/constants"
          ],
          [
            "@schemas",
            "./src/schemas"
          ]
        ],
        "extensions": [
          ".js",
          ".jsx",
          ".json",
          ".ts",
          ".tsx"
        ]
      }
    }
  },
  "rules": {
    "no-console": "warn",
    //* Avoid Bugs
    "no-undef": "error",
    "semi": "error",
    "semi-spacing": "error",
    //* Best Practices
    "eqeqeq": "warn",
    "no-invalid-this": "error",
    "no-return-assign": "error",
    "no-unused-expressions": ["error", { "allowTernary": true }],
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "no-constant-condition": "warn",
    "no-unused-vars": ["warn", { "ignoreRestSiblings": true, "argsIgnorePattern": "req|res|next|__|^_" }],
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
    "no-duplicate-imports": "error",
    "prettier/prettier": "error"

  }
}